import { z } from "zod";
/**
 * @description 401
 */
export var addContactsToSequence401Schema = z.any();
/**
      * @description 403
      */
export var addContactsToSequence403Schema = z.object({ "error": z.string().nullish(), "error_code": z.string().nullish() });
/**
      * @description 422
      */
export var addContactsToSequence422Schema = z.union([z.object({ "error": z.string().nullish() }), z.object({ "error": z.string().nullish() })]);
/**
      * @description 429
      */
export var addContactsToSequence429Schema = z.object({ "message": z.string().nullish() });
/**
      * @description 200
      */
export var addContactsToSequenceMutationResponseSchema = z.object({ "entity_progress_job": z.object({ "id": z.string().nullish(), "user_id": z.string().nullish(), "job_type": z.string().nullish(), "entity_ids": z.array(z.string()).nullish(), "params": z.object({ "followup_sequence_params": z.any().nullish(), "sequence_id": z.string().nullish(), "send_email_from_email_account_id": z.array(z.string()).nullish(), "send_email_from_email_address": z.any().nullish(), "deploy_contacts_analytics_params": z.object({ "analytics_context": z.any().nullish(), "type": z.string().nullish() }).nullish(), "scheduled_addition_params": z.any().nullish(), "signals": z.any().nullish(), "source": z.string().nullish(), "safety_check_filter_options": z.object({ "sequence_active_in_other_campaigns": z.string().nullish(), "sequence_no_email": z.string().nullish(), "sequence_unverified_email": z.string().nullish(), "sequence_same_company_in_same_campaign": z.string().nullish(), "sequence_finished_in_other_campaigns": z.string().nullish(), "sequence_job_change": z.string().nullish() }).nullish() }).nullish(), "progress": z.number().nullish(), "batch_size": z.number().nullish() }).nullish(), "signals_hash": z.any().nullish() });
export var addContactsToSequencePathParamsSchema = z.object({ "sequence_id": z.string().describe("The Apollo ID for the sequence to which you want to add contacts. <br><br>To find sequence IDs, call the <a href=\"https://docs.apollo.io/reference/search-for-sequences\" target=\"_blank\">Search for Sequences endpoint</a> and identify the 'id' value for the sequence. <br><br>Example: '66e9e215ece19801b219997f'") });
export var addContactsToSequenceQueryParamsSchema = z.object({ "emailer_campaign_id": z.string().describe("The same ID as the 'sequence_id'. <br><br>Example: '66e9e215ece19801b219997f'"), "contact_ids[]": z.array(z.string()).describe("The Apollo IDs for the contacts that you want to add to the sequence. <br><br>To find contact IDs, call the <a href=\"https://docs.apollo.io/reference/search-for-contacts\" target=\"_blank\">Search for Contacts endpoint</a> and identify the 'id' value for the contact. <br><br>Example: '66e34b81740c50074e3d1bd4'"), "send_email_from_email_account_id": z.string().describe("The Apollo ID for the email account that you want to use send emails to the contacts you are adding to the sequence. <br><br>To find email account IDs, call the <a href=\"https://docs.apollo.io/reference/get-a-list-of-email-accounts\" target=\"_blank\">Get a List of Email Accounts endpoint</a> and identify the 'id' value for the email account. <br><br>Example: '6633baaece5fbd01c791d7ca'"), "sequence_no_email": z.boolean().default(false).describe("Set to 'true' if you want to add contacts to the sequence even if they do not have an email address.").nullish(), "sequence_unverified_email": z.boolean().default(false).describe("Set to 'true' if you want to add contacts to the sequence if they have an unverified email address.").nullish(), "sequence_job_change": z.boolean().default(false).describe("Set to 'true' if you want to add contacts to the sequence even if they have recently changed jobs.").nullish(), "sequence_active_in_other_campaigns": z.boolean().default(false).describe("Set to 'true' if you want to add contacts to the sequence even if they have been added to other sequences. This parameter does not differentiate between active and paused sequences.").nullish(), "sequence_finished_in_other_campaigns": z.boolean().default(false).describe("Set to 'true' if you want to add contacts to the sequence if they have been marked as 'finished' in another sequence.").nullish(), "user_id": z.string().describe("The ID for the user in your team's Apollo account. <br><br>This is the user taking the action to add contacts to a sequence. When the sequence is updated, the activity log shows the user that added the contacts. <br><br>Use the <a href=\"https://docs.apollo.io/reference/get-a-list-of-users\" target=\"_blank\">Get a List of Users endpoint</a> to retrieve IDs for all of the users within your Apollo account. <br><br>Example: '66302798d03b9601c7934ebf'").nullish() });
