import { z } from "zod";
/**
 * @description 401
 */
export var organizationSearch401Schema = z.any();
/**
      * @description 403
      */
export var organizationSearch403Schema = z.object({ "message": z.string().nullish() });
/**
      * @description 429
      */
export var organizationSearch429Schema = z.object({ "message": z.string().nullish() });
/**
      * @description 200
      */
export var organizationSearchMutationResponseSchema = z.object({ "id": z.string().nullish(), "name": z.string().nullish(), "website_url": z.string().nullish(), "blog_url": z.any().nullish(), "angellist_url": z.any().nullish(), "linkedin_url": z.string().nullish(), "twitter_url": z.string().nullish(), "facebook_url": z.string().nullish(), "primary_phone": z.object({ "number": z.string().nullish(), "source": z.string().nullish(), "sanitized_number": z.string().nullish() }).nullish(), "languages": z.array(z.string()).nullish(), "alexa_ranking": z.number().nullish(), "phone": z.string().nullish(), "linkedin_uid": z.string().nullish(), "founded_year": z.number().nullish(), "publicly_traded_symbol": z.any().nullish(), "publicly_traded_exchange": z.any().nullish(), "logo_url": z.string().nullish(), "crunchbase_url": z.any().nullish(), "primary_domain": z.string().nullish(), "sanitized_phone": z.string().nullish(), "owned_by_organization_id": z.any().nullish(), "intent_strength": z.any().nullish(), "show_intent": z.boolean().default(true).nullish(), "has_intent_signal_account": z.boolean().default(true).nullish(), "intent_signal_account": z.any().nullish() });
export var organizationSearchQueryParamsSchema = z.object({ "organization_num_employees_ranges[]": z.array(z.string()).describe("The number range of employees working for the company. This enables you to find companies based on headcount. You can add multiple ranges to expand your search results. <br><br>Each range you add needs to be a string, with the upper and lower numbers of the range separated only by a comma. <br><br>Examples: '1,10'; '250,500'; '10000,20000'").nullish(), "organization_locations[]": z.array(z.string()).describe("The location of the company headquarters. You can search across cities, US states, and countries. <br><br>If a company has several office locations, results are still based on the headquarters location. For example, if you search 'chicago' but a company's HQ location is in 'boston', any Boston-based companies will not appearch in your search results, even if they match other parameters. <br><br>To exclude companies based on location, use the 'organization_not_locations' parameter. <br><br>Examples: 'texas'; 'tokyo'; 'spain'").nullish(), "organization_not_locations[]": z.array(z.string()).describe("Exclude companies from search results based on the location of the company headquarters. You can use cities, US states, and countries as locations to exclude. <br><br>This parameter is useful for ensuring you do not prospect in an undesirable territory. For example, if you use 'ireland' as a value, no Ireland-based companies will appear in your search results. <br><br>Examples: 'minnesota'; 'ireland'; 'seoul'").nullish(), "q_organization_keyword_tags[]": z.array(z.string()).describe("Filter search results based on keywords associated with companies. For example, you can enter 'mining' as a value to return only companies that have an association with the mining industry. <br><br>Examples: 'mining'; 'sales strategy'; 'consulting'").nullish(), "q_organization_name": z.string().describe("Filter search results to include a specific company name. <br><br>If the value you enter for this parameter does not match with a company's name, the company will not appear in search results, even if it matches other parameters. Partial matches are accepted. For example, if you filter by the value 'marketing', a company called 'NY Marketing Unlimited' would still be eligible as a search result, but 'NY Market Analysis' would not be eligible. <br><br>Example: 'apollo' or 'mining'").nullish(), "organization_ids[]": z.array(z.string()).describe("The Apollo IDs for the companies you want to include in your search results. Each company in the Apollo database is assigned a unique ID. <br><br>To find IDs, identify the values for 'organization_id' when you call this endpoint. <br><br>Example: '5e66b6381e05b4008c8331b8'").nullish(), "page": z.number().describe("The page number of the Apollo data that you want to retrieve. <br><br>Use this parameter in combination with the 'per_page' parameter to make search results for navigable and improve the performance of the endpoint. <br><br>Example: '4'").nullish(), "per_page": z.number().describe("The number of search results that should be returned for each page. Limited the number of results per page improves the endpoint's performance. <br><br>Use the 'page' parameter to search the different pages of data. <br><br>Example: '10'").nullish() });
