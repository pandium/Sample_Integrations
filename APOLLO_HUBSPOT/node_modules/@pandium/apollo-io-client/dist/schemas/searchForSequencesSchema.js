import { z } from "zod";
/**
 * @description 401
 */
export var searchForSequences401Schema = z.any();
/**
      * @description 403
      */
export var searchForSequences403Schema = z.union([z.object({ "error": z.string().nullish(), "error_code": z.string().nullish() }), z.object({ "message": z.string().nullish() })]);
/**
      * @description 429
      */
export var searchForSequences429Schema = z.object({ "message": z.string().nullish() });
/**
      * @description 200
      */
export var searchForSequencesMutationResponseSchema = z.object({ "id": z.string().nullish(), "name": z.string().nullish(), "archived": z.boolean().default(true).nullish(), "created_at": z.string().nullish(), "emailer_schedule_id": z.string().nullish(), "max_emails_per_day": z.any().nullish(), "user_id": z.string().nullish(), "same_account_reply_policy_cd": z.any().nullish(), "excluded_account_stage_ids": z.array(z.string()).nullish(), "excluded_contact_stage_ids": z.array(z.string()).nullish(), "contact_email_event_to_stage_mapping": z.object({}).nullish(), "label_ids": z.array(z.string()).nullish(), "create_task_if_email_open": z.boolean().default(true).nullish(), "email_open_trigger_task_threshold": z.number().nullish(), "mark_finished_if_click": z.boolean().default(true).nullish(), "active": z.boolean().default(true).nullish(), "days_to_wait_before_mark_as_response": z.number().nullish(), "starred_by_user_ids": z.array(z.string()).nullish(), "mark_finished_if_reply": z.boolean().default(true).nullish(), "mark_finished_if_interested": z.boolean().default(true).nullish(), "mark_paused_if_ooo": z.boolean().default(true).nullish(), "sequence_by_exact_daytime": z.any().nullish(), "permissions": z.string().nullish(), "last_used_at": z.any().nullish(), "sequence_ruleset_id": z.string().nullish(), "folder_id": z.any().nullish(), "same_account_reply_delay_days": z.number().nullish(), "is_performing_poorly": z.boolean().default(true).nullish(), "num_contacts_email_status_extrapolated": z.number().nullish(), "remind_ab_test_results": z.boolean().default(true).nullish(), "ab_test_step_ids": z.array(z.any()).nullish(), "prioritized_by_user": z.any().nullish(), "creation_type": z.string().nullish(), "num_steps": z.number().nullish(), "unique_scheduled": z.number().nullish(), "unique_delivered": z.number().nullish(), "unique_bounced": z.number().nullish(), "unique_opened": z.number().nullish(), "unique_hard_bounced": z.number().nullish(), "unique_spam_blocked": z.number().nullish(), "unique_replied": z.number().nullish(), "unique_demoed": z.number().nullish(), "unique_clicked": z.number().nullish(), "unique_unsubscribed": z.number().nullish(), "bounce_rate": z.number().nullish(), "hard_bounce_rate": z.number().nullish(), "open_rate": z.number().nullish(), "click_rate": z.number().nullish(), "reply_rate": z.number().nullish(), "spam_block_rate": z.number().nullish(), "opt_out_rate": z.number().nullish(), "demo_rate": z.number().nullish(), "loaded_stats": z.boolean().default(true).nullish(), "cc_emails": z.string().nullish(), "bcc_emails": z.string().nullish(), "underperforming_touches_count": z.number().nullish() });
export var searchForSequencesQueryParamsSchema = z.object({ "q_name": z.string().describe("Add keywords to narrow the search of the sequences in your team's Apollo account. <br><br>Keywords should directly match at least part of a sequence's name. For example, searching the keyword 'marketing' might return the result 'NY Marketing Sequence', but not 'NY Marketer Conference 2025 attendees'. <br><br>This parameter only searches sequence names, not other sequence fields. <br><br>Example: 'marketing conference attendees'").nullish(), "page": z.string().describe("The page number of the Apollo data that you want to retrieve. <br><br>Use this parameter in combination with the 'per_page' parameter to make search results for navigable and improve the performance of the endpoint. <br><br>Example: '4'").nullish(), "per_page": z.string().describe("The number of search results that should be returned for each page. Limited the number of results per page improves the endpoint's performance. <br><br>Use the 'page' parameter to search the different pages of data. <br><br>Example: '10'").nullish() });
