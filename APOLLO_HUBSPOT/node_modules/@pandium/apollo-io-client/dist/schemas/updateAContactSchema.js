import { z } from "zod";
/**
 * @description 401
 */
export var updateAContact401Schema = z.any();
/**
      * @description 422
      */
export var updateAContact422Schema = z.union([z.object({ "error": z.string().nullish() }), z.object({ "error": z.string().nullish() }), z.object({ "error": z.string().nullish(), "deleted_contact_ids": z.array(z.string()).nullish() })]);
/**
      * @description 429
      */
export var updateAContact429Schema = z.object({ "message": z.string().nullish() });
/**
      * @description 200
      */
export var updateAContactMutationResponseSchema = z.object({ "contact": z.object({ "contact_roles": z.array(z.any()).nullish(), "id": z.string().nullish(), "first_name": z.string().nullish(), "last_name": z.string().nullish(), "name": z.string().nullish(), "linkedin_url": z.any().nullish(), "title": z.string().nullish(), "contact_stage_id": z.string().nullish(), "owner_id": z.string().nullish(), "creator_id": z.string().nullish(), "person_id": z.any().nullish(), "email_needs_tickling": z.any().nullish(), "organization_name": z.string().nullish(), "source": z.string().nullish(), "original_source": z.string().nullish(), "organization_id": z.string().nullish(), "headline": z.any().nullish(), "photo_url": z.any().nullish(), "present_raw_address": z.string().nullish(), "linkedin_uid": z.any().nullish(), "extrapolated_email_confidence": z.any().nullish(), "salesforce_id": z.any().nullish(), "salesforce_lead_id": z.any().nullish(), "salesforce_contact_id": z.any().nullish(), "salesforce_account_id": z.any().nullish(), "crm_owner_id": z.any().nullish(), "created_at": z.string().nullish(), "emailer_campaign_ids": z.array(z.any()).nullish(), "direct_dial_status": z.any().nullish(), "direct_dial_enrichment_failed_at": z.any().nullish(), "email_status": z.string().nullish(), "email_source": z.any().nullish(), "account_id": z.string().nullish(), "last_activity_date": z.any().nullish(), "hubspot_vid": z.any().nullish(), "hubspot_company_id": z.any().nullish(), "crm_id": z.any().nullish(), "sanitized_phone": z.string().nullish(), "merged_crm_ids": z.any().nullish(), "updated_at": z.string().nullish(), "queued_for_crm_push": z.boolean().default(true).nullish(), "suggested_from_rule_engine_config_id": z.any().nullish(), "email_unsubscribed": z.any().nullish(), "label_ids": z.array(z.string()).nullish(), "has_pending_email_arcgate_request": z.boolean().default(true).nullish(), "has_email_arcgate_request": z.boolean().default(true).nullish(), "existence_level": z.string().nullish(), "email": z.string().email().nullish(), "email_from_customer": z.boolean().default(true).nullish(), "typed_custom_fields": z.object({}).nullish(), "custom_field_errors": z.object({}).nullish(), "crm_record_url": z.any().nullish(), "email_status_unavailable_reason": z.any().nullish(), "email_true_status": z.string().nullish(), "updated_email_true_status": z.boolean().default(true).nullish(), "contact_rule_config_statuses": z.array(z.any()).nullish(), "source_display_name": z.string().nullish(), "twitter_url": z.any().nullish(), "contact_emails": z.array(z.any()).nullish(), "next_contact_id": z.any().nullish(), "time_zone": z.string().nullish(), "city": z.string().nullish(), "state": z.string().nullish(), "country": z.string().nullish(), "intent_strength": z.any().nullish(), "show_intent": z.boolean().default(true).nullish(), "phone_numbers": z.array(z.object({ "raw_number": z.string().nullish(), "sanitized_number": z.string().nullish(), "type": z.string().nullish(), "position": z.number().nullish(), "status": z.string().nullish(), "dnc_status": z.any().nullish(), "dnc_other_info": z.any().nullish(), "dialer_flags": z.any().nullish() })).nullish(), "account_phone_note": z.any().nullish(), "free_domain": z.boolean().default(true).nullish(), "is_likely_to_engage": z.boolean().default(true).nullish(), "email_domain_catchall": z.boolean().default(true).nullish() }).nullish(), "labels": z.array(z.object({ "id": z.string().nullish(), "modality": z.string().nullish(), "cached_count": z.number().nullish(), "name": z.string().nullish(), "created_at": z.string().nullish(), "updated_at": z.string().nullish(), "user_id": z.string().nullish() })).nullish() });
export var updateAContactPathParamsSchema = z.object({ "contact_id": z.string().describe("The Apollo ID for the contact that you want to update. <br><br>To find contact IDs, call the <a href=\"https://docs.apollo.io/reference/search-for-contacts\" target=\"_blank\">Search for Contacts endpoint</a> and identify the 'id' value for the contact. <br><br>Example: '66e34b81740c50074e3d1bd4'") });
export var updateAContactQueryParamsSchema = z.object({ "first_name": z.string().describe("Update the contact's first name. This should be a human-readable name. <br><br>Example: 'Tim'").nullish(), "last_name": z.string().describe("Update the contact's last name. This should be a human-readable name. <br><br>Example: 'Zheng'").nullish(), "organization_name": z.string().describe("Update the name of the contact's employer (company). This should be the current employer. <br><br>To ensure a contact is assigned to the right company in the Apollo contact base, check the exact company name using the <a href=\"https://docs.apollo.io/reference/organization-search\" target=\"_blank\">Organization Search endpoint</a>. <br><br>Example: 'apollo'").nullish(), "title": z.string().describe("Update the job title that the contact holds. <br><br>Example: 'senior research analyst'").nullish(), "account_id": z.string().describe("The Apollo ID to update the account to which the contact is assigned. Each company with enriched data is assigned a unique account ID. <br><br>To find account IDs, call the <a href=\"https://docs.apollo.io/reference/organization-search\" target=\"_blank\">Organization Search endpoint</a> and identify the value for 'id' within the 'accounts[]' array for each company. If a company is not already part of an account within your Apollo instance, you instead need to call either the <a href=\"https://docs.apollo.io/reference/organization-enrichment\" target=\"_blank\">Organization Enrichment endpoint</a> or the <a href=\"https://docs.apollo.io/reference/bulk-organization-enrichment\" target=\"_blank\">Bulk Organization Enrichment endpoint</a> to enrich the organization's data, then identify the value for 'account_id' for the company. <br><br>Be sure you understand the difference between organization IDs and account IDs. Every company in the Apollo database is assigned an organization ID, but only companies with enriched data are assigned an account ID. If you use an organization ID with this endpoint, you might still receive a '200' response, but the contact will be created without being assigned to the desired account. <br><br>Example: '63f53afe4ceeca00016bdd2f'").nullish(), "email": z.string().email().describe("Update the email address of the contact. <br><br>Example: 'example@email.com'").nullish(), "website_url": z.string().describe("Update the corporate website URL for the contact's current employer (company). <br><br>This should be the full URL, including 'https://www.', '.com', and similar. Do not add URL slugs or sub-directories. <br><br>Do not use social media URLs, such as LinkedIn profile links. This will lead to inaccurate data enrichment for the contact. <br><br>Examples: 'https://www.apollo.io/'; 'https://www.microsoft.com/'").nullish(), "label_names[]": z.array(z.string()).describe("Update the lists that the contact belongs to within your team's Apollo account. If your entry does not match the name of a list within your account, Apollo automatically creates a new list. <br><br>If you use this parameter to add the contact to lists, Apollo automatically removes them from any existing lists to which they were already added, unless you add those lists again. <br><br>Lists enable your team to consolidate related contacts and accounts so you can more easily prospect and engage them. When in the Apollo product (not API), users can use lists as a search filter, add lists to a sequence to automate outreach, and add lists to workflows for task scheduling and sequence maintenance. <br><br>Examples: '2024 big marketing conference attendees'; 'inbound contact'; 'smb clients'").nullish(), "contact_stage_id": z.string().describe("The Apollo ID to update the contact stage to which the contact is assigned. Call the <a href=\"https://docs.apollo.io/reference/list-contact-stages\" target=\"_blank\">List Contact Stages endpoint</a> to retrieve a list of all the contact stage IDs available in your Apollo account. <br><br>Example: '6095a710bd01d100a506d4af'").nullish(), "present_raw_address": z.string().describe("Update the personal location for the contact. This can include a city, US state, and country. <br><br>Apollo matches the location you provide to the most applicable pre-defined location. <br><br>Examples: 'Atlanta, United States'; 'Tokyo, Japan'; 'Saint Petersburg, Russia'").nullish(), "direct_phone": z.string().describe("Update the primary phone number for the contact. <br><br>Apollo sanitizes phone numbers, so you can enter them in any format. The sanitized number can be viewed in the endpoint response. <br><br>Examples: '555-303-1234'; '+44 7911 123456'").nullish(), "corporate_phone": z.string().describe("Update the work/office phone number for the contact. <br><br>This is a direct line to the contact at their employer, not the corporate headquarters phone number. <br><br>Apollo sanitizes phone numbers, so you can enter them in any format. The sanitized number can be viewed in the endpoint response. <br><br>Examples: '555-303-1234'; '+44 7911 123456'").nullish(), "mobile_phone": z.string().describe("Update the mobile phone number for the contact. <br><br>Apollo sanitizes phone numbers, so you can enter them in any format. The sanitized number can be viewed in the endpoint response. <br><br>Examples: '555-303-1234'; '+44 7911 123456'").nullish(), "home_phone": z.string().describe("Update the home phone number for the contact. <br><br>Apollo sanitizes phone numbers, so you can enter them in any format. The sanitized number can be viewed in the endpoint response. <br><br>Examples: '555-303-1234'; '+44 7911 123456'").nullish(), "other_phone": z.string().describe("Update an unknown type of phone number or an alternative phone number for the contact. <br><br>Apollo sanitizes phone numbers, so you can enter them in any format. The sanitized number can be viewed in the endpoint response. <br><br>Examples: '555-303-1234'; '+44 7911 123456'").nullish() });
