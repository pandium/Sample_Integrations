import { z } from "zod";
/**
 * @description 401
 */
export var updateContactStage401Schema = z.any();
/**
      * @description 422
      */
export var updateContactStage422Schema = z.object({ "error": z.string().nullish() });
/**
      * @description 429
      */
export var updateContactStage429Schema = z.object({ "message": z.string().nullish() });
/**
      * @description 200
      */
export var updateContactStageMutationResponseSchema = z.object({ "contacts": z.array(z.object({ "contact_roles": z.array(z.any()).nullish(), "id": z.string().nullish(), "first_name": z.string().nullish(), "last_name": z.string().nullish(), "name": z.string().nullish(), "linkedin_url": z.any().nullish(), "title": z.string().nullish(), "contact_stage_id": z.string().nullish(), "owner_id": z.string().nullish(), "creator_id": z.string().nullish(), "person_id": z.any().nullish(), "email_needs_tickling": z.any().nullish(), "organization_name": z.string().nullish(), "source": z.string().nullish(), "original_source": z.string().nullish(), "organization_id": z.string().nullish(), "headline": z.any().nullish(), "photo_url": z.any().nullish(), "present_raw_address": z.any().nullish(), "linkedin_uid": z.any().nullish(), "extrapolated_email_confidence": z.any().nullish(), "salesforce_id": z.any().nullish(), "salesforce_lead_id": z.any().nullish(), "salesforce_contact_id": z.any().nullish(), "salesforce_account_id": z.any().nullish(), "crm_owner_id": z.any().nullish(), "created_at": z.string().nullish(), "emailer_campaign_ids": z.array(z.any()).nullish(), "direct_dial_status": z.any().nullish(), "direct_dial_enrichment_failed_at": z.any().nullish(), "email_status": z.string().nullish(), "email_source": z.any().nullish(), "account_id": z.string().nullish(), "last_activity_date": z.any().nullish(), "hubspot_vid": z.any().nullish(), "hubspot_company_id": z.any().nullish(), "crm_id": z.any().nullish(), "sanitized_phone": z.any().nullish(), "merged_crm_ids": z.any().nullish(), "updated_at": z.string().nullish(), "queued_for_crm_push": z.boolean().default(true).nullish(), "suggested_from_rule_engine_config_id": z.any().nullish(), "email_unsubscribed": z.any().nullish(), "label_ids": z.array(z.any()).nullish(), "has_pending_email_arcgate_request": z.boolean().default(true).nullish(), "has_email_arcgate_request": z.boolean().default(true).nullish(), "existence_level": z.string().nullish(), "email": z.string().email().nullish(), "email_from_customer": z.boolean().default(true).nullish(), "typed_custom_fields": z.object({}).nullish(), "custom_field_errors": z.any().nullish(), "crm_record_url": z.any().nullish(), "email_status_unavailable_reason": z.any().nullish(), "email_true_status": z.string().nullish(), "updated_email_true_status": z.boolean().default(true).nullish(), "contact_rule_config_statuses": z.array(z.any()).nullish(), "source_display_name": z.string().nullish(), "twitter_url": z.any().nullish(), "contact_campaign_statuses": z.array(z.any()).nullish(), "contact_emails": z.array(z.any()).nullish(), "intent_strength": z.any().nullish(), "show_intent": z.boolean().default(true).nullish(), "phone_numbers": z.array(z.any()).nullish(), "account_phone_note": z.any().nullish(), "free_domain": z.boolean().default(true).nullish(), "is_likely_to_engage": z.boolean().default(true).nullish(), "email_domain_catchall": z.boolean().default(true).nullish() })).nullish() });
export var updateContactStageQueryParamsSchema = z.object({ "contact_ids[]": z.array(z.string()).describe("The Apollo IDs for the contacts that you want to update. <br><br>To find contact IDs, call the <a href=\"https://docs.apollo.io/reference/search-for-contacts\" target=\"_blank\">Search for Contacts endpoint</a> and identify the 'id' value for the contact. <br><br>Example: '66e34b81740c50074e3d1bd4'"), "contact_stage_id": z.string().describe("The Apollo ID for the contact stage to which you want to assign the contacts. Call the <a href=\"https://docs.apollo.io/reference/list-contact-stages\" target=\"_blank\">List Contact Stages endpoint</a> to retrieve a list of all the contact stage IDs available in your Apollo account. <br><br>Example: '6095a710bd01d100a506d4af'") });
