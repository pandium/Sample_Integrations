import { z } from "zod";
/**
 * @description 401
 */
export var updateContactStatusSequence401Schema = z.any();
/**
      * @description 403
      */
export var updateContactStatusSequence403Schema = z.object({ "error": z.string().nullish(), "error_code": z.string().nullish() });
/**
      * @description 429
      */
export var updateContactStatusSequence429Schema = z.object({ "message": z.string().nullish() });
/**
      * @description 200
      */
export var updateContactStatusSequenceMutationResponseSchema = z.object({ "entity_progress_job": z.object({ "id": z.string().nullish(), "user_id": z.string().nullish(), "job_type": z.string().nullish(), "entity_ids": z.array(z.string()).nullish(), "params": z.object({ "sequence_ids": z.array(z.string()).nullish(), "mode": z.string().nullish(), "stop_reason": z.any().nullish(), "api_key": z.string().nullish(), "access_token": z.any().nullish() }).nullish(), "progress": z.number().nullish(), "batch_size": z.number().nullish() }).nullish() });
export var updateContactStatusSequenceQueryParamsSchema = z.object({ "emailer_campaign_ids[]": z.array(z.string()).describe("The Apollo IDs for the sequences that you want to update. If you add multiple sequences, you will update the status of the contacts across the chosen sequences. <br><br>To find sequence IDs, call the <a href=\"https://docs.apollo.io/reference/search-for-sequences\" target=\"_blank\">Search for Sequences endpoint</a> and identify the 'id' value for the sequence. <br><br>Example: '66e9e215ece19801b219997f'"), "contact_ids[]": z.array(z.string()).describe("The Apollo IDs for the contacts in the sequences. These are the contacts whose sequence status you want to update. <br><br>To find contact IDs, call the <a href=\"https://docs.apollo.io/reference/search-for-contacts\" target=\"_blank\">Search for Contacts endpoint</a> and identify the 'id' value for the contact. <br><br>Example: '66e34b81740c50074e3d1bd4'"), "mode": z.string().describe("Choose 1 of the following options to update the sequence status of the contacts:   <ul> <li> 'mark_as_finished': Mark the contacts as having finished the sequence. </li> <li> 'remove': Remove the contacts from the sequence. </li> <li> 'stop':  </li> </ul>") });
